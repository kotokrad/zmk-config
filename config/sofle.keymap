/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&left_encoder { resolution = <2>; };
&right_encoder { resolution = <2>; };

/ {

    behaviors {
        morph_arr_inc: morph_arrows_increment {
            compatible = "zmk,behavior-mod-morph";
            label = "MORPH_ARR_INC";
            #binding-cells = <0>;
            bindings = <&kp UP>, <&kp RIGHT>;
            mods = <(MOD_LGUI)>;
        };
        morph_arr_dec: morph_arrows_decrement {
            compatible = "zmk,behavior-mod-morph";
            label = "MORPH_ARR_DEC";
            #binding-cells = <0>;
            bindings = <&kp DOWN>, <&kp LEFT>;
            mods = <(MOD_LGUI)>;
        };
        enc_arrows: behavior_sensor_rotate_arrows {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "ENC_ARR";
            #sensor-binding-cells = <2>;
            bindings = <&morph_arr_inc>, <&morph_arr_dec>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  `    |  1  |  2   |  3  |  4    |  5  |                   |  6   |  7    |  8    |  9   |   0   |   [   |
// |  TAB  |  Q  |  W   |  E  |  R    |  T  |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
// |  ESC  |  A  |  S   |  D  |  F    |  G  |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X   |  C  |  V    |  B  |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//               | CTRL | ALT | LOWER | GUI |  SPACE |  | ENTER | RAISE| CTRL  | ALT   | GUI  |
            bindings = <
&kp GRAVE &kp N1 &kp N2    &kp N3   &kp N4 &kp N5                      &kp N6 &kp N7    &kp N8    &kp N9   &kp N0   &kp LBKT
&kp TAB   &kp Q  &kp W     &kp E    &kp R  &kp T                       &kp Y  &kp U     &kp I     &kp O    &kp P    &kp BSPC
&kp ESC   &kp A  &kp S     &kp D    &kp F  &kp G                       &kp H  &kp J     &kp K     &kp L    &kp SEMI &kp SQT
&kp LSHFT &kp Z  &kp X     &kp C    &kp V  &kp B    &kp C_MUTE  &none  &kp N  &kp M     &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
                 &kp LCTRL &kp LALT &mo 1  &kp LGUI &kp SPACE   &kp RET &mo 2  &kp RCTRL &kp RALT  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &enc_arrows>;
        };

        lower_layer {
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// | `     |  1  |  2  |  3   |  4   |  5   |                   |   _  |   -   |   +   |   =  |    ]  |  F12  |
// |       |  !  |  @  |  #   |  $   |  %   |                   |  (   |  {    |  }    |  )   |       |       |
// |       |  =  |  -  |  +   |  {   |  }   |        |  |       |      |  [    |  ]    |      |   \   |       |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&trans    &kp F1    &kp F2    &kp F3      &kp F4    &kp F5                    &kp F6    &kp F7    &kp F8   &kp F9    &kp F10  &kp F11
&kp GRAVE &kp N1    &kp N2    &kp N3      &kp N4    &kp N5                    &kp UNDER &kp MINUS &kp PLUS &kp EQUAL &kp RBKT &kp F12
&trans    &kp EXCL  &kp AT    &kp HASH    &kp DLLR  &kp PRCNT                 &kp LPAR  &kp LBRC  &kp RBRC &kp RPAR  &none    &none
&trans    &kp EQUAL &kp MINUS &kp KP_PLUS &kp LBRC  &kp RBRC  &trans   &trans &none     &kp LBKT  &kp RBKT &none     &kp BSLH &trans
                    &trans    &trans      &trans    &trans    &trans   &trans &trans    &trans    &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC &inc_dec_kp LC(LA(UP)) LC(LA(DOWN))>;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |       |       |       |       |       |       |
// |     | INS  | PSCR | GUI   |       |      |                |   _   |   -   |   +   |   =   |   ]   |  DEL  |
// |     | ALT  | CTRL | SHIFT |       | CAPS |                |   ←   |   ↓   |   ↑   |   →   |       |       |
// |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |       |       |       |       |       |       |
//              |      |       |       |      |      |  |      |       |       |       |       |
            bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4             &trans    &trans    &trans   &trans    &trans  &trans
&trans     &kp INS      &kp PSCRN    &kp K_CMENU  &trans       &trans                   &kp UNDER &kp MINUS &kp PLUS &kp EQUAL &kp RBKT &kp DEL
&trans     &kp LALT     &kp LCTRL    &kp LSHFT    &trans       &kp CLCK                 &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT &none    &none
&trans     &kp K_UNDO   &kp K_CUT    &kp K_COPY   &kp K_PASTE  &trans  &trans   &trans  &trans    &trans    &trans   &trans    &trans   &trans
                        &trans       &trans       &trans       &trans  &trans   &trans  &trans    &trans    &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };
    };
};
